//Client IPs
//Number of clients
8
//IPs
node1:6666
node2:6666
node3:6666
node4:6666
node5:6666
node6:6666
node7:6666
node8:6666

//Test time (seconds)
340

//Number of tests
60
//Tests each node will do (same order as the one defined in IPs)
//Use ranges (e.g, 0-7), and chain them with "," (e.g, 0-7,16-23)
0-59
0-59
0-59
0-59
0-59
0-59
0-59
0-59


//REPEAT TYPES:
//LOOP: goes through list, repeat at end of list
//SPLIT: does each entry n times before going to the next, such that nTests/nVariables = n. nVariables % nTests must be 0.

//Number of variables
9

//Variable name
N_QUERY_CLIENTS
//Repeat type
LOOP
//Number of entries for this variable
5
//Values for variable, one per line
24
48
72
96
192


//
TEST_NAME_PRE
LOOP_1
3
/go/results/1SF/2_April/8CPU/automated/readCommited/mixIndividual/Q5
/go/results/1SF/2_April/8CPU/automated/readCommited/mixIndividual/Q11
/go/results/1SF/2_April/8CPU/automated/readCommited/mixIndividual/Q14

//
CONFIG_EXTRA
LOOP_1
3
Q5/
Q11/
Q14/

//
INDEX_NAME
SPLIT
1
localIndex

//
IS_GLOBAL
SPLIT
1
false

//
SINGLE_SERVER
SPLIT
1
false

//
TEST_TYPE
SPLIT
4
0
0.001
0.1
0.5

//
UPD_RATE
SPLIT
4
0
0.001
0.1
0.5

//
CLIENT_SIZE
LOOP_0
5
//Values for variable, one per line
2_24
2_48
2_72
2_96
2_192