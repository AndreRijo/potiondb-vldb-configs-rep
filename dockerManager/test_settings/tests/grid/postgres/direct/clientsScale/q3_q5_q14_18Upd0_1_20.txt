//Client IPs
//Number of clients
2
//IPs
dahu-1:6666
dahu-2:6666

//39+30+40=109
//Test time (seconds)
115
//2
//Number of tests
52
//Tests each node will do (same order as the one defined in IPs)
//Use ranges (e.g, 0-7), and chain them with "," (e.g, 0-7,16-23)
all
all


//REPEAT TYPES:
//LOOP: goes through list, repeat at end of list
//SPLIT: does each entry n times before going to the next, such that nTests/nVariables = n. nVariables % nTests must be 0.

//Number of variables
12

//Variable name
CLIENTS
//Repeat type
LOOP
//Number of entries for this variable
13
//Values for variable, one per line
5
10
20
40
60
80
100
120
140
150
180
210
250

//
CLIENT_SIZE
LOOP
13
//Values for variable, one per line
5
10
20
40
60
80
100
120
140
150
180
210
250

//
N_UPDATE_CLIENTS
LOOP
13
1
2
4
8
12
16
20
24
28
30
36
42
50

//
TEST_NAME_PRE
SPLIT
4
/go/results/1SF/Postgres/automated/paper/noTC/ramdisk/clientScale/0.2updClients/q3/
/go/results/1SF/Postgres/automated/paper/noTC/ramdisk/clientScale/0.2updClients/q5/
/go/results/1SF/Postgres/automated/paper/noTC/ramdisk/clientScale/0.2updClients/q14/
/go/results/1SF/Postgres/automated/paper/noTC/ramdisk/clientScale/0.2updClients/q18/

//
UPD_RATE
SPLIT
1
0.1

//
IS_REDIRECT
SPLIT
1
false

//
N_READS_TXN
LOOP
1
1

//
USE_TC
LOOP
1
false

//
QUERIES
SPLIT
4
3
5
14
18

//
SLEEP
SPLIT
1
43s

//
QUERY_WAIT
SPLIT
1
23000

//
N_REPEATS
SPLIT
1
0
//1
//2
